{% extends 'base.html.twig' %}

{% block title %}Nouvel avis - EduTrip{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .hero-section {
            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
            color: white;
            padding: 40px 0;
            margin-bottom: 50px;
            border-radius: 0 0 50px 50px;
        }
        
        .form-card {
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            border: none;
        }
        
        .card-header {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            padding: 25px;
            border-bottom: none;
        }
        
        .form-label {
            font-weight: 600;
            font-size: 1.05rem;
            margin-bottom: 10px;
            color: #444;
        }
        
        .btn-submit {
            border-radius: 50px;
            font-weight: 600;
            padding: 12px 30px;
            text-transform: uppercase;
            letter-spacing: 1px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            background: linear-gradient(45deg, #11998e, #38ef7d);
            border: none;
            transition: all 0.3s ease;
        }
        
        .btn-submit:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 20px rgba(0,0,0,0.15);
            background: linear-gradient(45deg, #0f8a81, #32d871);
        }
        
        .btn-back {
            border-radius: 50px;
            font-weight: 500;
            padding: 12px 30px;
            border: 2px solid #ddd;
            color: #555;
            background: transparent;
            transition: all 0.3s ease;
        }
        
        .btn-back:hover {
            background: #f8f9fa;
            border-color: #bbb;
            color: #333;
        }
        
        textarea.form-control {
            border-radius: 15px;
            padding: 15px;
            border-color: #e0e0e0;
            box-shadow: none;
            transition: all 0.3s ease;
        }
        
        textarea.form-control:focus {
            border-color: #6a11cb;
            box-shadow: 0 0 0 0.25rem rgba(106, 17, 203, 0.15);
        }
        
        textarea.form-control.is-invalid {
            border-color: #dc3545;
            background-image: none;
            padding-right: 15px;
        }
        
        .rating-container {
            background: #f8f9fa;
            padding: 30px;
            border-radius: 15px;
            margin-bottom: 30px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }
        
        .rating-container.is-invalid {
            border: 1px solid #dc3545;
            background-color: rgba(220, 53, 69, 0.05);
        }
        
        .rating-title {
            font-weight: 600;
            margin-bottom: 20px;
            color: #444;
            text-align: center;
        }
        
        /* Rating stars */
        .simple-rating {
            display: flex;
            justify-content: center;
            margin: 20px 0;
        }
        
        .simple-rating input[type="radio"] {
            display: none;
        }
        
        .simple-rating label {
            cursor: pointer;
            font-size: 2.5rem;
            padding: 0 5px;
            color: #ccc;
            transition: all 0.2s ease;
        }
        
        .simple-rating label:hover,
        .simple-rating label:hover ~ label,
        .simple-rating input[type="radio"]:checked ~ label {
            color: #FFD700;
        }
        
        .rating-descriptions {
            display: flex;
            justify-content: space-between;
            margin-top: 10px;
            color: #777;
            font-size: 0.9rem;
        }
        
        .rating-descriptions span:first-child {
            margin-right: auto;
        }
        
        .rating-descriptions span:last-child {
            margin-left: auto;
        }
        
        .selected-rating {
            margin-top: 15px;
            text-align: center;
            font-weight: 600;
            height: 24px;
            transition: all 0.3s ease;
        }
        
        .validation-error {
            color: #dc3545;
            text-align: center;
            margin-top: 10px;
            font-size: 0.9rem;
            padding: 5px 10px;
            background-color: rgba(220, 53, 69, 0.1);
            border-radius: 4px;
        }
        
        .invalid-feedback {
            color: #dc3545;
            font-size: 0.85rem;
            margin-top: 5px;
            display: block;
        }
        
        .character-counter {
            font-size: 0.8rem;
            color: #6c757d;
            margin-top: 0.5rem;
            text-align: right;
        }
        
        .character-counter.warning {
            color: #ffc107;
        }
        
        .character-counter.danger {
            color: #dc3545;
        }
        
        .alert-error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 20px;
        }
    </style>
{% endblock %}

{% block body %}
<div class="hero-section">
    <div class="container">
        <h1 class="display-4 fw-bold mb-0 text-center">Partagez votre expérience</h1>
        <p class="lead opacity-75 text-center mb-0">Votre avis nous aide à améliorer nos services</p>
    </div>
</div>

<div class="container pb-5">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            {% for message in app.flashes('error') %}
                <div class="alert alert-danger alert-dismissible fade show mb-4" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i> {{ message }}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            {% endfor %}
            
            <div class="form-card card">
                <div class="card-header">
                    <h2 class="card-title mb-0 text-center">Nouveau témoignage</h2>
                </div>
                <div class="card-body p-4 p-lg-5">
                    {% if form_errors(form) is not empty %}
                        <div class="alert-error mb-4">
                            <i class="fas fa-exclamation-circle me-2"></i>Veuillez corriger les erreurs ci-dessous
                            <div class="mt-2">
                                {{ form_errors(form) }}
                            </div>
                        </div>
                    {% endif %}
                    
                    {{ form_start(form, {'attr': {'class': 'needs-validation', 'id': 'review-form', 'novalidate': 'novalidate'}}) }}
                        <div style="display: none;">
                            {{ form_widget(form.rating) }}
                        </div>
                        
                        <div class="rating-container mb-4 {% if form.rating.vars.errors|length > 0 %}is-invalid{% endif %}" id="rating-container">
                            <h3 class="rating-title">Comment évaluez-vous votre expérience ?</h3>
                            
                            <div class="simple-rating">
                                <input type="radio" id="star5" name="custom_rating" value="5" {% if form.rating.vars.value == 5 %}checked{% endif %} />
                                <label for="star5"><i class="fas fa-star"></i></label>
                                
                                <input type="radio" id="star4" name="custom_rating" value="4" {% if form.rating.vars.value == 4 %}checked{% endif %} />
                                <label for="star4"><i class="fas fa-star"></i></label>
                                
                                <input type="radio" id="star3" name="custom_rating" value="3" {% if form.rating.vars.value == 3 %}checked{% endif %} />
                                <label for="star3"><i class="fas fa-star"></i></label>
                                
                                <input type="radio" id="star2" name="custom_rating" value="2" {% if form.rating.vars.value == 2 %}checked{% endif %} />
                                <label for="star2"><i class="fas fa-star"></i></label>
                                
                                <input type="radio" id="star1" name="custom_rating" value="1" {% if form.rating.vars.value == 1 %}checked{% endif %} />
                                <label for="star1"><i class="fas fa-star"></i></label>
                            </div>
                            
                            <div class="rating-descriptions">
                                <span>Très déçu</span>
                                <span>Très satisfait</span>
                            </div>
                            
                            <div class="selected-rating" id="selected-rating"></div>
                            
                            {% if form.rating.vars.errors|length > 0 %}
                                <div class="validation-error">
                                    {% for error in form.rating.vars.errors %}
                                        {{ error.message }}
                                    {% endfor %}
                                </div>
                            {% else %}
                                <div class="validation-error" id="rating-error" style="display: none;">
                                    Veuillez sélectionner une note
                                </div>
                            {% endif %}
                        </div>

                        <div class="mb-4">
                            {{ form_label(form.comment, 'Partagez vos impressions', {'label_attr': {'class': 'form-label'}}) }}
                            <div class="position-relative">
                                {{ form_widget(form.comment, {'attr': {'class': 'form-control' ~ (form.comment.vars.errors|length > 0 ? ' is-invalid' : ''), 'placeholder': 'Décrivez votre expérience en détail...', 'rows': 7, 'minlength': 10, 'maxlength': 1000, 'id': 'comment-field'}}) }}
                                
                                {% if form.comment.vars.errors|length > 0 %}
                                    <div class="invalid-feedback">
                                        {% for error in form.comment.vars.errors %}
                                            {{ error.message }}
                                        {% endfor %}
                                    </div>
                                {% else %}
                                    <div class="invalid-feedback" id="comment-error">
                                        Le commentaire doit contenir entre 10 et 1000 caractères
                                    </div>
                                {% endif %}
                                
                                <div class="character-counter" id="char-counter">0 / 1000 caractères</div>
                            </div>
                            <small class="form-text text-muted mt-2">
                                <i class="fas fa-info-circle me-1"></i> Minimum 10 caractères, maximum 1000 caractères.
                            </small>
                        </div>

                        <div class="d-grid gap-3 mt-4 d-md-flex justify-content-md-between">
                            <a href="{{ path('app_avis_index') }}" class="btn btn-back">
                                <i class="fas fa-arrow-left me-2"></i>Retour aux avis
                            </a>
                            <button type="submit" class="btn btn-submit" id="submit-btn">
                                <i class="fas fa-paper-plane me-2"></i>Publier mon avis
                            </button>
                        </div>
                    {{ form_end(form, {'render_rest': false}) }}
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const customRatingInputs = document.querySelectorAll('input[name="custom_rating"]');
        const formRatingInputs = document.querySelectorAll('input[name^="avis[rating]"]');
        const selectedRating = document.getElementById('selected-rating');
        const ratingError = document.getElementById('rating-error');
        const ratingContainer = document.getElementById('rating-container');
        const reviewForm = document.getElementById('review-form');
        const commentField = document.getElementById('comment-field');
        const commentError = document.getElementById('comment-error');
        const charCounter = document.getElementById('char-counter');
        
        const ratingTexts = {
            1: 'Très déçu 😞',
            2: 'Déçu 😕',
            3: 'Correct 😐',
            4: 'Satisfait 🙂',
            5: 'Très satisfait 😄'
        };
        
        // Initialiser le compteur de caractères
        updateCharCounter();
        
        // Check if a rating is already selected
        let currentValue = null;
        customRatingInputs.forEach(input => {
            if (input.checked) {
                currentValue = parseInt(input.value);
                showRatingText(currentValue);
            }
        });
        
        // Add event listeners to custom rating inputs
        customRatingInputs.forEach(input => {
            input.addEventListener('change', function() {
                const value = parseInt(this.value);
                
                // Update the form's actual inputs
                formRatingInputs.forEach(formInput => {
                    if (parseInt(formInput.value) === value) {
                        formInput.checked = true;
                    } else {
                        formInput.checked = false;
                    }
                });
                
                showRatingText(value);
                hideError(ratingError);
                ratingContainer.classList.remove('is-invalid');
            });
        });
        
        // Fonction pour afficher le texte de la note
        function showRatingText(value) {
            if (value > 0) {
                selectedRating.textContent = ratingTexts[value];
                selectedRating.style.color = value >= 4 ? '#28a745' : (value >= 3 ? '#ffc107' : '#dc3545');
            } else {
                selectedRating.textContent = '';
            }
        }
        
        // Événement pour mettre à jour le compteur de caractères
        commentField.addEventListener('input', function() {
            updateCharCounter();
            validateCommentField();
        });
        
        function updateCharCounter() {
            const currentLength = commentField.value.length;
            charCounter.textContent = currentLength + ' / 1000 caractères';
            
            if (currentLength >= 900 && currentLength < 1000) {
                charCounter.className = 'character-counter warning';
            } else if (currentLength >= 1000) {
                charCounter.className = 'character-counter danger';
            } else {
                charCounter.className = 'character-counter';
            }
        }
        
        function validateCommentField() {
            const currentLength = commentField.value.length;
            
            if (currentLength < 10) {
                commentField.classList.add('is-invalid');
                if (commentError) {
                    commentError.style.display = 'block';
                }
                return false;
            } else {
                commentField.classList.remove('is-invalid');
                if (commentError) {
                    commentError.style.display = 'none';
                }
                return true;
            }
        }
        
        function hideError(element) {
            if (element) {
                element.style.display = 'none';
            }
        }
        
        function showError(element, message) {
            if (element) {
                element.textContent = message;
                element.style.display = 'block';
            }
        }
        
        // Vérifier la validation avant soumission
        reviewForm.addEventListener('submit', function(e) {
            let isValid = true;
            
            // Vérifier si une note a été sélectionnée
            let hasRating = false;
            formRatingInputs.forEach(input => {
                if (input.checked) {
                    hasRating = true;
                }
            });
            
            if (!hasRating) {
                isValid = false;
                if (ratingError) {
                    showError(ratingError, 'Veuillez sélectionner une note');
                }
                ratingContainer.classList.add('is-invalid');
            }
            
            // Vérifier le commentaire
            if (!validateCommentField()) {
                isValid = false;
            }
            
            if (!isValid) {
                e.preventDefault();
                // Faire défiler jusqu'à la première erreur
                const firstError = document.querySelector('.is-invalid') || document.querySelector('.validation-error[style="display: block"]');
                if (firstError) {
                    firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
                }
            }
        });
    });
</script>
{% endblock %}
